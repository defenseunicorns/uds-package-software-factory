imagePullPolicy: IfNotPresent

istio:
  enabled: true
  injection: enabled

networkPolicies:
  enabled: true
  additionalPolicies:
  # expected use case is to open egress for runner jobs
  # This is a dev example policy spec and CIDR 0.0.0.0/0 is unsafe for operational environments
  # requests to controlPlane should also be blocked in an operational policy
  - name: egress-runner-jobs
    spec:
      podSelector: {}
      policyTypes:
      - Egress
      egress:
      - to:
        - ipBlock:
            cidr: 0.0.0.0/0
            except:
            # Block requests to AWS cloud metadata IP
            - 169.254.169.254/32
            # Block requests to controlPlane if CIDR not 0.0.0.0/0
            # - "{{ $.Values.networkPolicies.controlPlaneCidr }}"


# no longer necessary to directly pass through .Values.monitoring.enabled
# the package chart uses: .Capabilities.APIVersions.Has "monitoring.coreos.com/v1" to toggle monitoring
metrics:
  enabled: true
  serviceMonitor:
    enabled: true

monitoring:
  enabled: true

# autoRegister requires kyverno
autoRegister:
  enabled: true

unregisterRunners: true

runners:
  job:
    # Adding this as a workaround
    # bigbang package-images.yaml says its using 8.8 but gitlab-runner is actually using 8.7. Forcing it to use 8.8
    # since the capability is pulling that in based on bigbang package-images.yaml
    tag: "8.8"
  config: |
    [[runners]]
      clone_url = "http://gitlab-webservice-default.gitlab.svc.cluster.local:8181"
      cache_dir = "/tmp/gitlab-runner/cache"
      [runners.kubernetes]
        namespace = "gitlab-runner-sandbox"
        image = "{{ printf "%s/%s:%s" .Values.runners.job.registry .Values.runners.job.repository .Values.runners.job.tag }}"
        helper_image = "{{ printf "%s/%s:%s" .Values.runners.helper.registry .Values.runners.helper.repository .Values.runners.helper.tag }}"
        image_pull_secrets = ["private-registry"]
      [runners.kubernetes.pod_labels]
        "job_id" = "${CI_JOB_ID}"
        "job_name" = "${CI_JOB_NAME}"
        "pipeline_id" = "${CI_PIPELINE_ID}"


# Look at this later for user CI
rbac:
  create: true
  clusterWideAccess: true
  rules:
  - resources: ["configmaps", "pods", "pods/attach", "secrets", "services"]
    verbs: ["get", "list", "watch", "create", "patch", "update", "delete"]
  - apiGroups: [""]
    resources: ["pods/exec"]
    verbs: ["create", "patch", "delete"]

