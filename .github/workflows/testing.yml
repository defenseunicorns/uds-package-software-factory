name: test-new-ci

permissions:
  id-token: write
  contents: read

defaults:
  run:
    # We need -e -o pipefail for consistency with GitHub Actions' default behavior
    shell: bash -e -o pipefail {0}

on:
  push:
  workflow_dispatch:

jobs:
  build-test-and-publish-2:
    runs-on: ubuntu-latest
    steps:
      - name: Free GH runner build space
        run: |
          df -h
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          df -h

      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}
          repository: ${{ github.repository }}
          ref: ${{ github.ref_name }}

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to registry1
        uses: docker/login-action@v2
        with:
          registry: registry1.dso.mil
          username: ${{ secrets.REGISTRY1_USERNAME }}
          password: ${{ secrets.REGISTRY1_PASSWORD }}

      - name: Build bundle and all dependencies
        run: |
          make build/all

      - name: Add zarf to bin on path
        run: |
          sudo cp build/zarf /usr/local/bin/zarf

      - name: Create k3s cluster in AWS
        id: create-cluster
        uses: defenseunicorns/uds-aws-ci-k3d@swf_additions
        with:
          cluster-action: create
          aws-assume-role: ${{ secrets.AWS_COMMERCIAL_ROLE_TO_ASSUME_K3D }}
          aws-region: us-west-2
          instance-size: "m6i.8xlarge"
          ami-prefix: "rc-uds-ci-k3d"
          k3s: "true"

      - name: Install Pepr lb module
        run: |
          zarf tools kubectl apply -f test/lb-annotation-aws/pepr-module-lb-annotate.yaml

      - name: Deploy bundle
        run: |
          make deploy

      - name: Setup LB hostnames
        run: |
          utils/metallb/dns.sh
          echo "hosts patch:"
          cat hosts.patch
          echo "hosts file before:"
          cat /etc/hosts
          sudo utils/metallb/hosts-write.sh
          echo "hosts file after:"
          cat /etc/hosts

      - name: Run tests
        run: |
          kubectl rollout status deployment/gitlab-webservice-default -n gitlab --watch --timeout=1200s
          curl https://keycloak.bigbang.dev -v
          curl https://gitlab.bigbang.dev -v
          curl https://grafana.bigbang.dev -v

      - name: Teardown k3s cluster
        if: always()
        # renovate: datasource=github-tags depName=defenseunicorns/uds-aws-ci-k3d versioning=semver
        uses: defenseunicorns/uds-aws-ci-k3d@swf_additions
        with:
          cluster-action: destroy
