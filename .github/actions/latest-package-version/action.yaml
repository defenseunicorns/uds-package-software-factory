name: Get Latest SWF Package Version
description: Fetches the latest version of the specified SWF package

inputs:
  package-name:
    description: Name of the SWF package
    required: true

outputs:
  latest-package-version:
    description: The latest SWF package version
    value: ${{ steps.latest-package-version.outputs.latest-package-version }}

runs:
  using: composite
  steps:
    - id: latest-package-version
      shell: bash
      run: |
        #!/bin/bash

        PACKAGE_NAME="${{ inputs.package-name }}"

        # Check if the package name contains '/'
        if [[ "$PACKAGE_NAME" =~ "/" ]]
        then
            # Replace '/' with '%2F' for URL encoding
            PACKAGE_NAME="${PACKAGE_NAME//\//%2F}"
        fi

        if [[ "$RESPONSE" =~ "Package not found" ]]
        then
            echo -e "Package not found. Please ensure you provided a valid package name\n"
            echo "You can find available packages here: https://github.com/orgs/defenseunicorns/packages?repo_name=uds-package-software-factory"
            exit 1
        fi

        RESPONSE="$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/orgs/defenseunicorns/packages/container/$PACKAGE_NAME/versions)"

        LATEST_PACKAGE_VERSION="$(echo "$RESPONSE" | jq -r '.[0].metadata.container.tags[0]')"

        # Check if the latest package version tag contains 'skeleton'
        if [[ "$LATEST_PACKAGE_VERSION" =~ "skeleton" ]]
        then
            # Remove 'skeleton' from the package tag
            LATEST_PACKAGE_VERSION="${LATEST_PACKAGE_VERSION//skeleton/}"

            # Add 'amd64' to the package tag
            LATEST_PACKAGE_VERSION+="amd64"
        fi

        echo "latest-package-version=$LATEST_PACKAGE_VERSION" >> "$GITHUB_OUTPUT"
